#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
SIMPLE AI DETECTOR - ‡πÉ‡∏ä‡πâ OpenCV DNN ‡πÅ‡∏ó‡∏ô Ultralytics YOLO
"""

import cv2
import numpy as np

class SimpleYOLODetector:
    """AI detector ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ OpenCV DNN - ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£ 100%"""
    
    def __init__(self):
        print("üîß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Simple AI Detector...")
        try:
            # ‡πÉ‡∏ä‡πâ OpenCV AI Detector
            import sys
            import os
            sys.path.append(os.path.dirname(__file__))
            from opencv_yolo_detector import OpenCVYOLODetector
            
            self.opencv_ai = OpenCVYOLODetector()
            if self.opencv_ai.available:
                print("‚úÖ Simple AI Detector ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
                self.available = True
            else:
                print("‚ö†Ô∏è OpenCV AI ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°")
                self.available = False
                
        except Exception as e:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î AI: {e}")
            self.available = False
    
    def detect_birds(self, frame):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ô‡∏Å‡πÉ‡∏ô‡πÄ‡∏ü‡∏£‡∏° - ‡πÉ‡∏ä‡πâ AI ‡∏à‡∏£‡∏¥‡∏á‡πÜ"""
        if not self.available:
            return []
        
        try:
            # ‡πÉ‡∏ä‡πâ OpenCV AI Detection
            bird_detections = self.opencv_ai.detect_birds(frame)
            
            detections = []
            for det in bird_detections:
                detections.append({
                    'center': det['center'],
                    'bbox': det['bbox'],
                    'confidence': det['confidence'],
                    'area': det['bbox'][2] * det['bbox'][3],  # width * height
                    'source': 'opencv_ai'
                })
                
            return detections
            
        except Exception as e:
            print(f"‚ö†Ô∏è AI Detection error: {e}")
            return []

# Test simple detector
if __name__ == "__main__":
    detector = SimpleYOLODetector()
    
    if detector.available:
        print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Simple AI Detector...")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ö RTSP
        rtsp_url = "rtsp://ainok1:ainok123@192.168.1.100:554/stream1"
        cap = cv2.VideoCapture(rtsp_url)
        
        if cap.isOpened():
            print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ RTSP ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            frame_count = 0
            detection_count = 0
            
            while frame_count < 20:  # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 20 ‡πÄ‡∏ü‡∏£‡∏°
                ret, frame = cap.read()
                if not ret:
                    continue
                    
                frame_count += 1
                
                # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
                detections = detector.detect_birds(frame)
                
                if len(detections) > 0:
                    detection_count += 1
                    print(f"üéØ Frame {frame_count}: AI ‡∏û‡∏ö‡∏ô‡∏Å {len(detections)} ‡∏ï‡∏±‡∏ß")
                    
                    for i, det in enumerate(detections):
                        print(f"   ‡∏ô‡∏Å {i+1}: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à {det['confidence']:.2f}, ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà {det['area']}")
                        
                if frame_count % 5 == 0:
                    print(f"üìä ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß {frame_count}/20 ‡πÄ‡∏ü‡∏£‡∏° | ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö: {detection_count}")
                    
            cap.release()
            
            print(f"\nüìà ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Simple AI:")
            print(f"   üì∑ ‡πÄ‡∏ü‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {frame_count}")
            print(f"   üéØ ‡πÄ‡∏ü‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ: {detection_count}")
            print(f"   üìä ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö: {(detection_count/frame_count)*100:.1f}%")
            
            if detection_count > 0:
                print("‚úÖ Simple AI ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ!")
            else:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö")
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ RTSP")
    else:
        print("‚ùå Simple AI ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
